<?php
/**
 * @file
 * The primary PHP file for the Drupal Bootstrap base theme.
 *
 * This file should only contain light helper functions and point to stubs in
 * other files containing more complex functions.
 *
 * The stubs should point to files within the `./includes` folder named after
 * the function itself minus the theme prefix. If the stub contains a group of
 * functions, then please organize them so they are related in some way and name
 * the file appropriately to at least hint at what it contains.
 *
 * All [pre]process functions, theme functions and template files lives inside
 * the `./templates` folder. This is a highly automated and complex system
 * designed to only load the necessary files when a given theme hook is invoked.
 *
 * Visit this project's official documentation site, http://drupal-bootstrap.org
 * or the markdown files inside the `./docs` folder.
 *
 * @see bootstrap_theme()
 * @see \Drupal\bootstrap\Registry
 */

use Drupal\bootstrap\Bootstrap;

/**
 * Include necessary theme files, all of which need to be discoverable here.
 */
$bootstrap = Bootstrap::getTheme('bootstrap');
$bootstrap->includeOnce('common.inc');
$bootstrap->includeOnce('deprecated.inc');
$bootstrap->includeOnce('pre-render.inc');
$bootstrap->includeOnce('process.inc');

/**
 * Implements hook_theme().
 *
 * This base-theme's custom theme hook implementations. Never define "path"
 * or "template" as these are detected and automatically added.
 *
 * @see bootstrap_theme_registry_alter()
 * @see \Drupal\bootstrap\Registry
 * @see hook_theme()
 */
function bootstrap_theme() {
  // Bootstrap Carousels.
  $hooks['bootstrap_carousel'] = array(
    'variables' => array(
      'attributes' => array(),
      'items' => array(),
      'start_index' => 0,
      'controls' => TRUE,
      'indicators' => TRUE,
      'interval' => 5000,
      'pause' => 'hover',
      'wrap' => TRUE,
    ),
  );

  // Bootstrap Dropdowns.
  $hooks['bootstrap_dropdown'] = array(
    'render element' => 'element',
  );

  // Bootstrap Modals.
  $hooks['bootstrap_modal'] = array(
    'variables' => array(
      'heading' => '',
      'body' => '',
      'footer' => '',
      'dialog_attributes' => array(),
      'attributes' => array(),
      'size' => '',
      'html_heading' => FALSE,
    ),
  );

  // Bootstrap Panels.
  $hooks['bootstrap_panel'] = array(
    'render element' => 'element',
  );
  return $hooks;
}

/**
 * Implements hook_css_alter().
 *
 * @see \Drupal\bootstrap\Alter\Css::alter()
 */
function bootstrap_css_alter(&$data, &$context1 = NULL, &$context2 = NULL) {
  Bootstrap::alter(__FUNCTION__, $data, $context1, $context2);
}

/**
 * Implements hook_element_info_alter().
 *
 * @see \Drupal\bootstrap\Alter\ElementInfo::alter()
 */
function bootstrap_element_info_alter(&$data, &$context1 = NULL, &$context2 = NULL) {
  Bootstrap::alter(__FUNCTION__, $data, $context1, $context2);
}

/**
 * Implements hook_form_alter().
 *
 * @see \Drupal\bootstrap\Alter\Form::alter()
 */
function bootstrap_form_alter(&$data, &$context1 = NULL, &$context2 = NULL) {
  Bootstrap::alter(__FUNCTION__, $data, $context1, $context2);
}

/**
 * Implements hook_form_system_theme_settings_alter().
 *
 * @see \Drupal\bootstrap\Alter\FormSystemThemeSettings::alter()
 */
function bootstrap_form_system_theme_settings_alter(&$data, &$context1 = NULL, &$context2 = NULL) {
  Bootstrap::alter(__FUNCTION__, $data, $context1, $context2);
}

/**
 * Implements hook_icon_bundle_list_alter().
 *
 * @see \Drupal\bootstrap\Alter\IconBundleList::alter()
 */
function bootstrap_icon_bundle_list_alter(&$data, &$context1 = NULL, &$context2 = NULL) {
  Bootstrap::alter(__FUNCTION__, $data, $context1, $context2);
}

/**
 * Implements hook_js_alter().
 *
 * @see \Drupal\bootstrap\Alter\Js::alter()
 */
function bootstrap_js_alter(&$data, &$context1 = NULL, &$context2 = NULL) {
  Bootstrap::alter(__FUNCTION__, $data, $context1, $context2);
}

/**
 * Implements hook_js_callback_filter_xss_alter().
 *
 * @see \Drupal\bootstrap\Alter\JsCallbackFilterXss::alter()
 */
function bootstrap_js_callback_filter_xss_alter(&$data, &$context1 = NULL, &$context2 = NULL) {
  Bootstrap::alter(__FUNCTION__, $data, $context1, $context2);
}

/**
 * Implements hook_menu_local_tasks_alter().
 *
 * @see \Drupal\bootstrap\Alter\MenuLocalTasks::alter()
 */
function bootstrap_menu_local_tasks_alter(&$data, &$context1 = NULL, &$context2 = NULL) {
  Bootstrap::alter(__FUNCTION__, $data, $context1, $context2);
}

/**
 * Implements hook_page_attachments_alter().
 *
 * @see \Drupal\bootstrap\Alter\PageAttachments::alter()
 */
function bootstrap_page_attachments_alter(&$data, &$context1 = NULL, &$context2 = NULL) {
  Bootstrap::alter(__FUNCTION__, $data, $context1, $context2);
}

/**
 * Implements hook_theme_registry_alter().
 *
 * @todo Remove once \Drupal\bootstrap\Theme\Registry can properly replace
 * the theme.registry service in a bootstrap_core sub-module.
 *
 * @see \Drupal\bootstrap\Alter\ThemeRegistry::alter()
 */
function bootstrap_theme_registry_alter(&$data, &$context1 = NULL, &$context2 = NULL) {
  Bootstrap::alter(__FUNCTION__, $data, $context1, $context2);
}

/**
 * Implements hook_theme_suggestions_alter().
 *
 * @see \Drupal\bootstrap\Alter\ThemeSuggestions::alter()
 */
function bootstrap_theme_suggestions_alter(&$data, &$context1 = NULL, &$context2 = NULL) {
  Bootstrap::alter(__FUNCTION__, $data, $context1, $context2);
}
